@using System.Threading;
@using ServerPages.Shared.Components;
@using ClientFileApi;
    using ClientFileApi;
@inject AudioPlayer Player;

<MudButton OnClick="TogglePlayingAudioAsync" is-playing="@(playing is not null)">
    <MudIcon Icon="Icons.Material.Filled.PlayArrow"></MudIcon>
</MudButton>

@code {

    [Parameter, EditorRequired]
    public ClientFileAccess.ClientFile File { get; set; } = default!;
    
    IJSObjectReference? playing;
    CancellationTokenSource disposalCts = new();

    async Task TogglePlayingAudioAsync()
    {
        if (playing is null)
        {
            // Toggle to play
            playing = await Player.PlayAsync(File);
        }
        else
        {
            // Toggle to stop
            await playing.InvokeVoidAsync("stop");
            await playing.DisposeAsync();
            playing = null;
        }
    }

    public void Dispose()
    {
        disposalCts.Cancel();
        GC.SuppressFinalize(this);
    }
}
